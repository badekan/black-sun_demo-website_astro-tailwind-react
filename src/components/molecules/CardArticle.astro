---
import { tv } from 'tailwind-variants';
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets';
import hoverBaseAndVariant from '../../utils/hoverBaseAndVariant';
import RichText, { RichTextSize } from '../atoms/RichText.astro';

/* Types */
export interface CardArticleData {
  title: string;
  text: string;
  tags: Array<string>;
  img: {
    src: ImageMetadata;
    src2x: String;
    alt: string;
  };
}

interface Props {
  data: CardArticleData;
}

/* Style */
const roundedCard = "rounded-xl";
const cardArticleBody = tv({
  extend: hoverBaseAndVariant,
  base: [
    `${roundedCard} p-6 text-left grow flex flex-col`,
  ],
  variants: {
    color: {
      gray: true,
    }
  }
});

/* Component */
const { data } = Astro.props;
const { title, text, img, tags } = data;

function truncate(str: string, maxLength: number) {
  // Si la chaîne de caractères est plus courte que la longueur maximale, on la retourne telle quelle
  if (str.length <= maxLength) {
    return str;
  }

  // Sinon, on coupe la chaîne et on ajoute les ellipses
  return str.substring(0, maxLength) + '...';
}
---
<div class="flex flex-col gap-6 h-full">
  <!-- HEAD -->
  <div class="w-full aspect-[269/207] lg:aspect-[357/207] relative">
    <ul class="absolute left-0 bottom-0 p-4 z-10 flex gap-3">
      {tags.map((tag) => (
          <li>
            <div class="inline-flex items-center bg-white/[.8] gap-2 px-3 py-[2px] rounded-lg">
              <span class="w-1 h-1 bg-black shrink-0 -ml-1"></span>
              <span class="text-xs"> {tag}</span>
            </div>
          </li>
      ))}
    </ul>
    <Image class={`object-cover w-full h-full absolute ${roundedCard}`} src={img.src} srcset={`${img.src2x} 2x`} alt={img.alt} />
  </div>
  <!-- BODY -->
  <button class={cardArticleBody({color:'gray'})} >
    <p class="text-xl font-semibold leading-snug mb-1">{title}</p>
    <RichText rawHtml={truncate(text, 55)} size={RichTextSize.Small} className="grow"/>
    <div class="w-full pt-4 flex justify-end"><Icon name="arrow-next" /></div>
  </button>
</div>